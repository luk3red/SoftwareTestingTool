{
  "exerciseId": "JunitExample_1",
  "refactoring_game_configuration": {
    "dependencies": [
      "<dependency>\n  <groupId>junit</groupId>\n  <artifactId>junit</artifactId>\n  <version>4.13.2</version>\n  <scope>test</scope>\n  </dependency>\n"
    ],
    "refactoring_limit": 5,
    "smells_allowed": 60,
    "ignored_smells": [
    ]
  },
  "check_game_configuration": {
    "questions": [
      {
        "questionTitle": "Qual è lo smell presente nel seguente metodo?",
        "questionCode": "    @Test\n    public void testAdd() { \n        int a = 15; int b = 20; \n        int expectedResult = 35;\n        //Act \n        long result = objCalcUnderTest.add(a, b);\n        //Assert\n        assertEquals(expectedResult, result);\n}\n",
        "answers": [
          {
            "answerText": "Assertion roulette",
            "isCorrect": true
          },
          {
            "answerText": "Magic number",
            "isCorrect": false
          }
        ]
      },
      {
        "questionTitle": "Qual è lo smell presente nel seguente metodo?",
        "questionCode": "    @Test\n    public void testSubtract() {\n        int a = 25; int b = 20; \n        int expectedResult = 5; \n        long result = objCalcUnderTest.subtract(a, b);\n        assertEquals(expectedResult, result);\n    }\n",
        "answers": [
          {
            "answerText": "Resource Optimism",
            "isCorrect": true
          },
          {
            "answerText": "Unknown Test",
            "isCorrect": false
          }
        ]
      }
    ]
  },
  "auto_valutative": false
}
